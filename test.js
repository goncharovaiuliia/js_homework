var l1 = 'number' + 3 + 3;
console.log('l1 = ' + l1);
//'number' - тип string
//так як у нас обчислення відбуваеться з ліва на право, і у випадку якщо один з операторів "string"
// то другий оператор теж перетворюється на "string"
// отже маємо "string" + "string"
// 'number' + 3 = 'number3'
// те саме з 'number3' + 3 - string
//result: l1 = number33 - string

let l2 = null + 3;
console.log('l2 = ' + l2);
//обчислення відбуваеться з ліва на право,
// null converted to 0
// 0 + 3
// result: l2 = 3

let l3 = 5 && "qwerty";
console.log('l3 = ' + l3);
// оператор && - АБО
// && - повертає true, якщо обидва операнди є true, інакше повертає false.
// тобто спочатку перевіряємо, що число 5 - є true
// потім перевіряемо, що "qwerty" теж - є true
// повертається останнє обчислене значення
// result: l3 = qwerty

const l4 = +'40' + +'2' + "hillel";
console.log('l4 = ' + l4);
//+ перед 40 - це в нас опе
// ++'2' - це в нас опер. інкремент
// у нас є "hillel" - рядок, тому всі інші оператори теж перетворюються в рядок
// result: l4 = 42hillel


var l5 = '10' - 5 === 6;
console.log('l5 = ' + l5);
// === оператор порівняння
// '10' - string, 5 number -> '10' переконвертовуеться в number
// 10 -5 = 5
// 5 === 6
// result: l5 = false

var l6 = true + false;
console.log('l6 = ' + l6);
// при використанні в операторі + з логюзначеннями вони конвертуються у 1 або 0
// true = 1, false = 0
// 1 + 0
// result: l6 = 1


var l7 = '4px' - 3;
console.log('l7 = ' + l7);
// при використанні оператора -, всі рядкові значення приводяться у числу
// 4px не може бути приведено до числа - NaN
// NaN не дорівнює взагалі нічого
// NaN - 3
// result: l7 = NaN

var l8 = '4' - 3;
console.log('l8 = ' + l8);
//при використанні оператора -, всі рядкові значення приводяться у числу
// 4 - 3
// result: l8 = 1

var l9 = '6' + 3 ** 0;
console.log('l9 = ' + l9);
// ** оператор піднесення до степені
// 3 приводимо у ступынь 0 = 1
// '6'+1, де 6 то String
// тому ми приводимо і інші значення у string
// result: l9 = 61

var l10 = 12 / '6';
console.log('l10 = ' + l10);
// 12 - number, '6' - string
// '6' приводимо до number
// при використанні оператора /, всі рядкові значення приводяться у числу
// потім виконуеться операція ділення
// result: l10 = 2

var l11 = '10' + (5 === 6);
console.log('l11 = ' + l11);
// 5===6 порівню.ться значення - false
// '10' + false
// при використанні оператора +, всі рядкові значення приводяться у рядок
// result: l11 = 10false

var l12 = null == '';
console.log('l12 = ' + l12);
// == оператор вільної рівності,порівнює значення після перетворення значення у загальний тип
// '' - пуста строка
// result: l12 = false

var l13 = 3 ** (9 / 3);
console.log('l13 = ' + l13);
// ** оператор піднесення до степені
// 3 приводимо у ступынь (9/3)
// спочатку відбуветься ділення 9 на 3 = 3
// result: l13 = 27

var l14 = !!'false' == !!'true';
console.log('l14 = ' + l14);
//!! - оператор перетворення у буліан
//!!'false' (!!String) = true, бо string не empty
//!!'true' (!!String) = true, бо string не empty
// result: l14 = true

var l15 = 0 || '0' && 1;
console.log('l15 = ' + l15);
// || OR
// && AND
// спочатку виконуеться оператор  OR, а потім AND
// 0 || '0' = 0
// 0 && 1
// result: l15 = 1

var l16 = (+null == false) < 1;
console.log('l16 = ' + l16);
// спочатку виконуеться дія у душках (+null == false)
// +null - конвертуеться у 0 (через унарний плюс)
// 0 == false
// == оператор вільної рівності,порівнює значення після перетворення значення у загальний тип
// true < 1
// true конвертуеться до нумерік = 1
// result: l16 = false

var l17 = false && true || true;
console.log('l17 = ' + l17);
// || OR
// && AND
// спочатку виконуеться оператор  AND, а потім OR
// false && true = false
// false || true
// result: l17 = true

var l18 = false && (false || true);
console.log('l18 = ' + l18);
// || OR
// && AND
// перше виконуеться операція у душках
// false || ture - true
// false && true = false - якщо 1 оператор хибний, то повертаємо його
// result: l18 = false

var l19 = (+null == false) < 1 ** 5;
console.log('l19 = ' + l19);
// перше виконуеться операція у душках
// +null - конвертуеться у 0 (через унарний плюс)
// 0 == false
// == оператор вільної рівності,порівнює значення після перетворення значення у загальний тип
// (+null == false) -> true
// ** оператор піднесення до степені
// 1 приводимо у ступінь 5 -> 1
// true <1 -> перетворення true = 1
// 1<1
// result:l19 = false